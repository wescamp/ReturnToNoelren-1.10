#textdomain wesnoth-ReturnToNoelren

#ifdef LSB_COMMENT
syntax shortcuts

============= rev History ============
0.0.1 set-up
0.8 update
#endif

#define LSB_LUAPACK
	[event]
		name=preload
		first_time_only=no	
		 [lua]
			code = << wesnoth.dofile("~add-ons/ReturnToNoelren/lua/tags.lua") >>
		 [/lua]
	[/event]
#enddef

#define LSB_VALUES EASY NORMAL HARD
#ifdef EASY
	value={EASY}
#endif
#ifdef NORMAL
	value={NORMAL}
#endif
#ifdef HARD
	value={HARD}
#endif
#enddef

#define LSB_IFDEBUG CODE
		[if]
			[variable]
				name=G_Debug
				boolean_equals=true
			[/variable]
			[then]
				{CODE}
			[/then]
		[/if]
#enddef

#define LSB_IFELSEDEBUG CODEIF CODELSE
		[if]
			[variable]
				name=G_Debug
				boolean_equals=true
			[/variable]
			[then]
				{CODEIF}
			[/then][else]
				{CODELSE}
			[/else]
		[/if]
#enddef

#define LSB_FIREVENT NAME
	[fire_event]
		name={NAME}
	[/fire_event]
#enddef

# wmlindent: start ignoring
#define FOREACH_REV ARRAY VAR
# Macro to begin a WML clause that iterates over an array in reverse order.
{VARIABLE {VAR} "$(${ARRAY}.length - 1)"}
[while]
    [variable]
    name={VAR}
    greater_than=-1
    [/variable]
    [do]
#enddef

#define PREV VAR
# Macro to end a WML clause that iterates over an array.
    [set_variable]
    name={VAR}
    add=-1
    [/set_variable]
    [/do]
[/while]
{CLEAR_VARIABLE {VAR}}
#enddef
# wmlindent: stop ignoring

# wmlindent: opener "{FOREACH_REV "
# wmlindent: closer "{PREV "

# --- shortcut to store an object into an array
#define LSB_OBJINFO OBJ
	[value]
		{OBJ}
	[/value]
#enddef

# --- shortcut to add an ability from its bare definition
# context: object, advance or trait
#define LSB_NEWABILITY_EFFECT ABILITY
	[effect]
		apply_to=new_ability
		[abilities]
			{ABILITY}
		[/abilities]
	[/effect]
#enddef

# ========================== Dialog macros =============================

#ifdef LSB_COMMENT
	These macros are designed for dialogs.
	LSB_DIAL: id of existing unit and text
	LSB_DIAL_N: speaker is the default narrator defined with his portrait: portraits/narrator.png
	LSB_DIAL_W: hint message with Wesnoth icon
	LSB_DIAL_R: Id of a role  (not a unit)
	LSB_DIAL_IMAGE: a portrait is given instead of unit
#endif

#define LSB_DIAL UNIT TEXT
        [message]
            speaker={UNIT}
            message= {TEXT}
        [/message]
#enddef

#define LSB_DIAL_UNIT TEXT
        [message]
            speaker=$unit.id
            message= {TEXT}
        [/message]
#enddef

#define LSB_DIAL_R ROLE TEXT
        [message]
            role={ROLE}
            message= {TEXT}
        [/message]
#enddef

#define LSB_DIAL_N TEXT
        [message]
            speaker=narrator
            image="portraits/narrator.png"
            message= {TEXT}
        [/message]
#enddef

#define LSB_DIAL_W TEXT
        [message]
            speaker=narrator
            image="wesnoth-icon.png"
            message= {TEXT}
        [/message]
#enddef

#define LSB_DIAL_IMAGE IMAGE TEXT
        [message]
            speaker=narrator
            image={IMAGE}
            message= {TEXT}
        [/message]
#enddef

# ---- macro for the help system
#define RTN_SETHELP MSG
	[set_variable]
		name=G_help
		value={{MSG}}
	[/set_variable]
#enddef

# ========================== Scenarios ending =============================

# --- Directly goto next level
#define LSB_CONTINUE
#[endlevel]
	result=victory
	linger_mode=no
	save=yes
	carryover_report=no
	{NEW_GOLD_CARRYOVER 100}
	{CLEAR_VARIABLE G_Debug,D_Objets}
#[/endlevel]
#enddef

# --- Std victory end
#define LSB_VICTORY GOLD
	[endlevel]
		result=victory
		bonus=yes
		save=yes
		{NEW_GOLD_CARRYOVER {GOLD}}
	[/endlevel]
	{CLEAR_VARIABLE G_Debug,D_Objets}
#enddef

#define LSB_NEXTLEVEL
	[endlevel]
		{LSB_CONTINUE}
	[/endlevel]
	{CLEAR_VARIABLE G_Debug,D_Objets}
#enddef

# ========================== AI =============================

#define LSB_AI_IGNORESIDE SIDE
#context [ai]
	[avoid]
		[filter]
			side={SIDE}
		[/filter]
		radius=2
	[/avoid]
#enddef
