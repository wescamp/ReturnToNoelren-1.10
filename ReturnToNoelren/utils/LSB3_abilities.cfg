#textdomain wesnoth-ReturnToNoelren

#ifdef LSB_COMMENT
Here come the ability macros suitable for units

============= rev History ============
0.8.0 set-up
#endif

# ========================== Abilities defines =============================

#define LSB_ABILITY_REGENERATE VALUE
	[regenerate]
		value={VALUE}
		id=regenerates
		name= _ "regenerates"
		female_name= _ "female^regenerates"
		description= _ "Regenerates:
		The unit will heal itself each turn. If it is poisoned, it will remove the poison instead of healing."
		affect_self=yes
		poison=cured
	[/regenerate]
#enddef

#define LSB_ABILITY_HEAL VALUE
    [heals]
        value={VALUE}
        id=healing
        affect_allies=yes
        affect_self=yes
        name={RTN_USTR-50}+" +{VALUE}"
        description= {RTN_USTR-51}+"{VALUE}"+{RTN_USTR-511}
        poison=cured
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/heals]
#enddef

#define LSB_ABILITY_TELEPORT
    # Canned definition of the TELEPORT ability to be included in an
    # [abilities] clause. (It's not exactly the standard teleport macro)
    [teleport]
        id=LSB_teleport
        name={RTN_USTR-52}
        description={RTN_USTR-53}
        [tunnel]
            id=village_teleport
            [source]
                terrain=*^V*
                [not]
                    [filter]
                        [not]
                            id=$teleport_unit.id
                        [/not]
                    [/filter]
                [/not]
            [/source]

            [target]
                terrain=*^V*
                [not]
                    [filter]
                    [/filter]
                [/not]
            [/target]

            [filter]
                ability=LSB_teleport
            [/filter]
        [/tunnel]
    [/teleport]
#enddef

#define LSB_LEADERSHIP RATEH RATEL
    # Canned definition of the LEADERSHIP ability to be included in an
    # [abilities] clause. (Combined with a negative influence on enemies)
		[leadership]
			id=terreur
			value=-{RATEH}
			cumulative=yes
			description={RTN_USTR-54}
			affect_self=no
			affect_allies=no
			affect_enemies=yes
			[affect_adjacent]
				adjacent=n,ne,se,s,sw,nw
			[/affect_adjacent]
		[/leadership]
		[leadership]
			id=joie
			value={RATEL}
			cumulative=yes
			description={RTN_USTR-55}
			affect_self=no
			affect_allies=yes
			affect_enemies=no
			[affect_adjacent]
				adjacent=n,ne,se,s,sw,nw
			[/affect_adjacent]
		[/leadership]
#enddef

#define ABILITY_DESERTHOME
    [regenerate]
        [filter_self]
            [filter_location]
                terrain=Dd,Ds
            [/filter_location]
        [/filter_self]
        value=3
        id=regen
        name={RTN_USTR-57}
        description={RTN_USTR-58}
        affect_self=yes
    [/regenerate]
#enddef

#define ABILITY_WATERHOME
    [regenerate]
        [filter_self]
            [filter_location]
                terrain=Wo,Ww
            [/filter_location]
        [/filter_self]
        value=3
        id=regen
        name={RTN_USTR-60}
        description={RTN_USTR-61}
        affect_self=yes
    [/regenerate]
#enddef

#define ABILITY_WATERHIDE
    # Canned definition of the waterhide ability to be included in an
    # [abilities] clause.
    [hides]
        id=waterhide
        name={RTN_USTR-62}
        description={RTN_USTR-63}
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=Ss,Wo*,Wo*^*,Ww*,Ww*^*
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define LSB_ABILITY_TERROR
	{LSB_LEADERSHIP 75 100}
#enddef

#define LSB_ABILITY_HURT AMOUNT
		[heals]
			value=-{AMOUNT}
			id=deathaura
			affect_enemies=yes
			affect_allies=no
			affect_self=no
			name= _ "Death Aura"
			female_name= _ "female^Death Aura"
			description=  _ "Death Aura:
Hurts adjacent enemy units at the beginning of each turn ({AMOUNT} damage)."
			[affect_adjacent]
			    adjacent=n,ne,se,s,sw,nw
			[/affect_adjacent]
		[/heals]
#enddef

#define LSB_ABILITY_HURTUND AMOUNT
		[heals]
			value=-{AMOUNT}
			id=unholybane
			affect_enemies=yes
			affect_allies=no
			name= _ "Unholybane"
			female_name= _ "female^Unholybane"
			description=  _ "Unholybane:
Allows the unit to damage adjacent undead enemies at the beginning of our turn. It cannot kill an enemy, it can only lower its health to 1hp.

This ability lowers enemies' health by {AMOUNT}, ignoring any resistances or weaknesses of enemies, so it`s very powerful against spirits."
			affect_self=no
			[affect_adjacent]
				adjacent=n,ne,se,s,sw,nw
				[filter]
					race=undead
				[/filter]
			[/affect_adjacent]
		[/heals]
#enddef

#define LSB_PETRIATTACK
	[stone]
		id=LSB_PetriAttack
		name="Petrify attack"
		description="This unit can petrify male units"
	[/stone]
#enddef

#ifdef LSBC
#define LSB_FASCINATION
	[fascination]
		id=WW_Fascination
		name="Fascination"
		description="The naked beauty of this unit stumps male enemy units."
		affect_self=no
		affect_enemies=yes
		affect_allies=no
		[affect_adjacent]
			adjacent=n,ne,se,s,sw,nw
		[/affect_adjacent]
	[/fascination]
#enddef

#define LSB_BOMBING
	[bombing]
		id=LSB_Bomber
		name=_"Bomber"
		description="This unit can drop bombs."
		affect_self=no
		affect_enemies=yes
		affect_allies=no
		[affect_adjacent]
			adjacent=n,ne,se,s,sw,nw
		[/affect_adjacent]
	[/bombing]
#enddef
#endif

# ========================== TRAITS =============================

#define TRAIT_ELEMENTAL
    # Units with trait Undead cannot be drained, poisoned or plagued.
    [trait]
        id=elemental
        availability="musthave"
        male_name={RTN_USTR-66}
        female_name={RTN_USTR-67}
        description={RTN_USTR-68}
        [effect]
            apply_to=status
            add=not_living
        [/effect]
    [/trait]
#enddef

# ========================== Effects =============================

#define LSB_REGENERATE_EFF VALUE
	{LSB_NEWABILITY_EFFECT {LSB_ABILITY_REGENERATE {VALUE} }}
#enddef

#define LSB_POISONWEAPON_EFF
	[effect]
		apply_to=attack
		type=blade
		[set_specials]
			mode=append
			{WEAPON_SPECIAL_POISON}
		[/set_specials]
	[/effect]
	[effect]
		apply_to=attack
		type=pierce
		[set_specials]
			mode=append
			{WEAPON_SPECIAL_POISON}
		[/set_specials]
	[/effect]
#enddef

#define CHT_DEFENSE
    [defense]
        deep_water=20
        shallow_water=30
        reef=30
        swamp_water=30
        flat=40
        sand=40
        forest=20
        hills=40
        mountains=30
        village=20
        castle=60
        cave=40
        frozen=40
        unwalkable=20
        impassable=20
        fungus=30
    [/defense]
#enddef

#define LSB_WEAKEN_EFF
	[effect]
		apply_to=resistance
		replace=no
		[resistance]
			blade=20
			pierce=20
			impact=20
			fire=20
			cold=20
			arcane=20
		[/resistance]
	[/effect]
#enddef

#define LSB_STRENGTHEN_EFF
	[effect]
		apply_to=resistance
		replace=no
		[resistance]
			blade=-20
			pierce=-20
			impact=-20
			fire=-20
			cold=-20
			arcane=-20
		[/resistance]
	[/effect]
#enddef

# ==================== Specials ====================

#define LSB_NOMISS RATE
# context:[specials]
	[chance_to_hit]
		id=nomiss
		name={RTN_USTR-64}+" {RATE}%"
		description={RTN_USTR-65}+"{RATE}%"+{RTN_USTR-651}
		value={RATE}
		cumulative=no
	[/chance_to_hit]
#enddef

# ==================== Advancements ====================

#define LSB_AMLA_DEFAULT
#context: [advancement]
        [effect]
            apply_to=max_experience
            increase=5%
        [/effect]
        [effect]
            apply_to=hitpoints
            heal_full=yes
        [/effect]
        [effect]
            apply_to=status
            remove=poisoned
        [/effect]
        [effect]
            apply_to=status
            remove=slowed
        [/effect]
#enddef

#define LSB_AMLA_LAST
# last advancement for all units
# context: [unit_type]
    [advancement]
        max_times=1000
        always_display=no
        id=standard
        description={RTN_USTR-69}
        image=icons/crossed_sword_and_hammer.png
		strict_amla=yes
        require_amla=""
        [effect]
            apply_to=hitpoints
            increase_total=10
            heal_full=yes
        [/effect]
		{LSB_AMLA_DEFAULT}
    [/advancement]
#enddef

#define LSB_ATTACKADVANCE NUM PRE
# Increase the nomber of attacks per turn. WARNING: this advance defines and uses a new variation of the unit type.
    [advancement]
        max_times=1
        id=att_{NUM}
        description="{NUM}"+{RTN_USTR-70}
        image="attacks/ram.png"
		strict_amla=yes
        require_amla={PRE}
	    [effect]
			apply_to=variation
			name=attAdv_{NUM}
	    [/effect]
		{LSB_AMLA_DEFAULT}
    [/advancement]

	[variation]
		variation_name=attAdv_{NUM}
		inherit=yes
		attacks={NUM}	
	[/variation]
#enddef

#define LSB_TELEPORTADVANCE
# enable the super teleport ability.
    [advancement]
        max_times=1
        id=LSB_tele
        description={RTN_USTR-53}
        image="attacks/touch-faerie.png"
		strict_amla=yes
        require_amla=""
		[effect]
			apply_to=new_ability
			[abilities]
				{LSB_ABILITY_TELEPORT}
			[/abilities]
		[/effect]
		{LSB_AMLA_DEFAULT}
    [/advancement]
#enddef

#define	LSB_HEALINGADVANCE
# enable a super healing ability
    [advancement]
        max_times=1
        always_display=yes
        id=LSB_Heals1
        description={RTN_USTR-71}
        image=icons/potion_green_small.png
        	strict_amla=yes
        require_amla=""
			[effect]
				apply_to=remove_ability
				[abilities]
					[heals]
						id=healing
					[/heals]
				[/abilities]
			[/effect]
			[effect]
				apply_to=new_ability
				[abilities]
					{LSB_ABILITY_HEAL 12}
				[/abilities]
			[/effect]
		{LSB_AMLA_DEFAULT}
    [/advancement]
#enddef

#define LSB_BETTERHEALINGADVANCE
# enable a super healing ability
    [advancement]
        max_times=1
        always_display=yes
        id=LSB_Heals2
        description={RTN_USTR-72}
        image=icons/potion_green_medium.png
		strict_amla=yes
        require_amla="LSB_Heals1"
			[effect]
				apply_to=remove_ability
				[abilities]
					[heals]
						id=healing
					[/heals]
				[/abilities]
			[/effect]
			[effect]
				apply_to=new_ability
				[abilities]
					{LSB_ABILITY_HEAL 16}
				[/abilities]
			[/effect]
		{LSB_AMLA_DEFAULT}
    [/advancement]
#enddef

#define LSB_BETTERMELEE NUM
# improve melee weapons (all), can be repeated NUM times
    [advancement]
        max_times={NUM}
        id=melee_adv
        description={RTN_USTR-73}
        image="attacks/touch-faerie.png"
		strict_amla=yes
        require_amla=""
		   [effect]
			apply_to=attack
			range=melee
			increase_damage=2
			increase_attacks=1
		  [/effect]
		{LSB_AMLA_DEFAULT}
    [/advancement]
#enddef

#define LSB_BETTERARCANE NUM
# improve arcane weapons (all), can be repeated NUM times
    [advancement]
        max_times={NUM}
        id=magic2
        description={RTN_USTR-74}
        image="attacks/faerie-fire.png"
        	strict_amla=yes
        require_amla=""
		   [effect]
			apply_to=attack
			type=arcane
			increase_damage=2
			increase_attacks=1
		  [/effect]
		{LSB_AMLA_DEFAULT}
    [/advancement]
#enddef

#define LSB_FASTERADVANCE NUM	
# improve movement speed, can be repeated NUM times
    [advancement]
        max_times={NUM}
        id=movement
        description={RTN_USTR-75}
        image=attacks/speed.png
		strict_amla=yes
        require_amla=""
		[effect]
			apply_to=movement
			increase=2
		[/effect]
		{LSB_AMLA_DEFAULT}
    [/advancement]
#enddef	

# ========================== Abilities events (must be included separately in unit types or scenarios) =============================

# --------------- Shockwave for weapon special -----------------
#define LSB_SHOCKWAVE
[event]
	name=attacker_hits
	first_time_only=no
	id=LSB_shockwave

	[filter_attack]
		special=shockwave
	[/filter_attack]

	[store_unit]
		[filter]
			 x,y=$x1,$y1
		[/filter]
		variable=harmer
		kill=no
	[/store_unit]
	[store_unit]
		[filter]
			 x,y=$x2,$y2
		[/filter]
		variable=primary_target
		kill=no
	[/store_unit]		#Stores the information about units to know their positions. Other targets are stored a bit lower, we need to damage them first.	
	[harm_unit]
		[filter]
			[filter_adjacent]
				x,y=$x2,$y2
			[/filter_adjacent]
			[not]
				side=$harmer.side
			[/not]
			[not]
				x,y=$x2,$y2
			[/not]
		[/filter]
		[filter_second]
			x,y=$x1,$y1
		[/filter_second]
		amount=10
		slowed=yes
		damage_type=impact
		fire_event=yes
		experience=no
		animate=no
	[/harm_unit] 		#Damages units, slowing them
	[store_unit]
		[filter]
			[filter_adjacent]
				x,y=$x2,$y2
			[/filter_adjacent]
			[not]
				side=$harmer.side
			[/not]
			[not]
				x,y=$x2,$y2
			[/not]
		[/filter] 
		variable=other_targets
		kill=yes		#We don't want to duplicate them.
	[/store_unit]	
	{FOREACH other_targets i}
		{VARIABLE move_x $other_targets[$i].x}
		{VARIABLE move_y $other_targets[$i].y}
		{VARIABLE_OP move_x sub $primary_target.x}
		{VARIABLE_OP move_y sub $primary_target.y}
		{VARIABLE_OP other_targets[$i].x add $move_x}
		{VARIABLE_OP other_targets[$i].y add $move_y}		#Get the directions from the primary targets to others, and move them into them.
		[unstore_unit]
			variable=other_targets[$i]
			find_vacant=yes
			check_passability=yes			#We don't want them to be knocked into walls, do we?
		[/unstore_unit]
	{NEXT i}
	{CLEAR_VARIABLE harmer}
	{CLEAR_VARIABLE primary_target}
	{CLEAR_VARIABLE other_targets}
	{CLEAR_VARIABLE move_x}
	{CLEAR_VARIABLE move_y}
[/event]
#enddef

# ------------ for petrify ability --------------
#define LSB_PETRIATTACK_EVENT

# --- Witches can use a special attack on males only
	[event]
		name=attacker hits
		first_time_only=no
		[filter_attack]
			name=stone
		[/filter_attack]
		[filter_second]
			gender=male
		[/filter_second]
		
#		{LSB_DIAL_W "Petri attack by $unit.name"}
		{LSB_COPYUNIT unit t_attacker}				
		{LSB_COPYUNIT second_unit t_attacked}				
		[store_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			mode=append
			variable=Stoned_$unit.side
			kill=yes
			animate=no
		[/store_unit]		
		{LSB_FIREVENT LSB_PetriAnim}
	[/event]

# --- Witches capture adjacent males to petrify them
	[event]
		name=moveto
		first_time_only=no
		[filter]
			gender=male
			[filter_adjacent]
				ability=LSB_PetriAttack
				is_enemy=yes
				[not]
					[filter_location]
						find_in=Stoned_$this_unit.side
					[/filter_location]
				[/not]
			[/filter_adjacent]
		[/filter]
		[store_unit]
			variable=t_attacker
			[filter]
				ability=LSB_PetriAttack
				[filter_adjacent]
					id=$unit.id
					is_enemy=yes
				[/filter_adjacent]
			[/filter]
		[/store_unit]
		{LSB_COPYUNIT unit t_attacked}				
		#{LSB_DIAL_W "Moveto of $t_attacked.name on $t_attacker.name"}
		[modify_unit]
			[filter]
				id=$t_attacker.id
			[/filter]
			moves=0
		[/modify_unit]
		[store_unit]
			[filter]
				id=$unit.id
			[/filter]
			mode=append
			variable=Stoned_$t_attacker.side
			kill=yes
			animate=no
		[/store_unit]				
		{LSB_FIREVENT LSB_PetriAnim}
	[/event]

# ---- This event setup the petrification for one turn. It stores the petrified and leave the witch	invisible
	[event]
		name=LSB_PetriAnim
		id=LSB_PetriAnim-1
		first_time_only=no
		
		[item]
			x,y=$t_attacked.x,$t_attacked.y
			image=$t_attacked.image~CS(50,-50,-50)
		[/item]
		[delay]
			time=1000
		[/delay]
		
		[move_unit]
			id=$t_attacker.id
			to_x=$t_attacked.x
			to_y=$t_attacked.y
		[/move_unit]
		[remove_item]
			x,y=$t_attacked.x,$t_attacked.y
		[/remove_item]
		
# hardening the witch
		[object]
			silent=yes
			name="PetriStrength"
			[filter]
				id=$t_attacker.id
			[/filter]
			{LSB_STRENGTHEN_EFF}
		[/object]

		[modify_unit]
			[filter]
				id=$t_attacker.id
			[/filter]
			variation=invisible
		[/modify_unit]
		
		[hide_unit]
			id=$t_attacker.id
		[/hide_unit]

		# ------ setting petrification
		[item]
			x,y=$t_attacked.x,$t_attacked.y
			halo=$t_attacked.image~GS()
		[/item]
		{CLEAR_VARIABLE t_attacked,t_attacker}
	[/event]
	
# --- this event stops the petrification.
	[event]
		name=side turn
		first_time_only=no

		{FOREACH Stoned_$side_number| i}
			{LSB_BOMBANIM $Stoned_$side_number|[$i].x $Stoned_$side_number|[$i].y}
			[store_unit]
				[filter]
					x,y=$Stoned_$side_number|[$i].x,$Stoned_$side_number|[$i].y
				[/filter]
				variable=t_attacker
				kill=yes
			[/store_unit]	
						
			# --- remove witch strength
			{FOREACH t_attacker.modifications.object j}
				[if]
					[variable]
						name=t_attacker.modifications.object[$j].name
						equals="PetriStrength"
					[/variable]
					[then]
						{CLEAR_VARIABLE t_attacker.modifications.object[$j]}
					[/then]
				[/if]
			{NEXT j}
			[unstore_unit]
				variable=Stoned_$side_number|[$i]
			[/unstore_unit]
			[harm_unit]
				[filter]
					id=$Stoned_$side_number|[$i].id
				[/filter]
				amount=16
				slowed=yes
			[/harm_unit]
			[unstore_unit]
				variable=t_attacker
				find_vacant=yes
			[/unstore_unit]
			[unhide_unit]
				id=$t_attacker.id
			[/unhide_unit]
			[modify_unit]
				[filter]
					id=$t_attacker.id
				[/filter]
				variation=null
			[/modify_unit]		
		{NEXT i}
		{CLEAR_VARIABLE Stoned_$side_number,t_attacker}
	[/event]
	
# --- if witch is killed
	[event]
		name=die
		first_time_only=no
		[filter]
			[filter_location]
				find_in=Stoned_$unit.side
			[/filter_location]
		[/filter]
		#{LSB_DIAL_W "$unit.name side $unit.side is dying at $unit.x $unit.y, $Fuckers_$unit.side|.length rapes in progress."}
		{FOREACH Stoned_$unit.side| i}
			[if]
				[variable]
					name=Stoned_$unit.side|[$i].x
					equals=$unit.x
				[/variable]
				[and]
					[variable]
						name=Stoned_$unit.side|[$i].y
						equals=$unit.y
					[/variable]
				[/and]
			[then]
				[kill]
					id=$unit.id
					animate=yes
					fire_event=no
				[/kill]
				[remove_item]
					x,y=$Stoned_$unit.side|[$i].x,$Stoned_$unit.side|[$i].y
				[/remove_item]
				[unstore_unit]
					variable=Stoned_$unit.side|[$i]
				[/unstore_unit]
				[modify_unit]
					[filter]
						id=$Stoned_$unit.side|[$i].id
					[/filter]
					hitpoints="$($Stoned_$unit.side|[$i].hitpoints / 2)"
					[status]
						slowed=yes
					[/status]
				[/modify_unit]
				{CLEAR_VARIABLE Stoned_$unit.side|[$i]}
			[/then][/if]
		{NEXT i}
	[/event]

	[event]
		name=victory
		[store_side]
			variable=tmp
		[/store_side]
		{FOREACH tmp i}
			{FOREACH Stoned_$tmp[$i].side| j}
				[unstore_unit]
					variable=Stoned_$tmp[$i].side|[$j]
					find_vacant=yes
				[/unstore_unit]
			{NEXT j}
			{CLEAR_VARIABLE Stoned_$tmp[$i].side|}
		{NEXT i}
		{CLEAR_VARIABLE tmp}
	[/event]

#enddef

#define SPECIAL_NOTES_SHADOW
_" This unit is able to spawn an illusion when he/she moves."#enddef

#define ABILITY_ROTM_SHADOW
    [dummy]
        id=rotm_shadow
        name= _ "shadow"
        female_name="female^shadow"
        description= _ "Shadow:
A unit who has this ability can leave his/her shadow at the hex where he/she was when he/she moves."
    [/dummy]
    [/abilities]
    [event]
        name=moveto
        first_time_only=no
        [filter]
            type=Naga Ninja
            side=1
            x,y=$x1,$y1
        [/filter]
        [if]
            [have_unit]
                id=$unit.id
                type=Naga Ninja
                x,y=$x1,$y1
                [not]
                    id=$rotm_mover.id
                    type=Naga Ninja
                    x,y=$x1,$y1
                [/not]
            [/have_unit]
            #[not]
            #    [variable]
            #        name=rotm_shadow
            #        equals=yes
            #    [/variable]
            #[/not]                
            [then]
                [item]
                    halo="units/undead/soulless-die-10.png"
                    x,y=$x2,$y2
                [/item]
                [delay]
                    time=100
                [/delay]
                [remove_item]
                    x,y=$x2,$y2
                [/remove_item]
                [item]
                    halo="units/undead/soulless-die-9.png"
                    x,y=$x2,$y2
                [/item]
                [delay]
                    time=100
                [/delay]
                [remove_item]
                    x,y=$x2,$y2
                [/remove_item]
                [sound]
                    name={SOUND_LIST:NAGA_HIT}
                [/sound]
                [item]
                    halo="units/undead/soulless-swimmer-die-4.png"
                    x,y=$x2,$y2
                [/item]
                [delay]
                    time=100
                [/delay]
                [remove_item]
                    x,y=$x2,$y2
                [/remove_item]
                [item]
                    halo="units/undead/soulless-swimmer-die-3.png"
                    x,y=$x2,$y2
                [/item]
                [delay]
                    time=100
                [/delay]
                [remove_item]
                    x,y=$x2,$y2
                [/remove_item]
                [unit]
                    side=1
                    type=Naga Shadow
                    x,y=$x2,$y2
                    random_traits=no
                    random_gender=yes
                    upkeep=full
                    moves=0
                [/unit]
                #[set_variable]
                #    name=rotm_shadow
                #    value=yes
                #[/set_variable]
                [set_variable]
                    name=rotm_mover.id
                    value=$unit.id
                [/set_variable]
            [/then]
            [else]
                [allow_undo]            
                [/allow_undo]
            [/else]
        [/if]
    [/event]
    [event]
        name=new turn
        first_time_only=no
        [if]
            [have_unit]
                type=Naga Shadow
                side=1
            [/have_unit]
            [then]
                [kill]
                    type=Naga Shadow
                    animate=yes
                [/kill]
                {CLEAR_VARIABLE rotm_mover.id}
            [/then]
            [else]
                [allow_undo]            
                [/allow_undo]
            [/else]        
        [/if]
    [/event]
    [+abilities]
#enddef        

#define LSB_ABILITY_IMMORTAL UNIT
# context: unit type or scenarios. Adjacent units are immediately replaced if killed.
# UNIT is a SUF (without [filter] tag) defining the able unit (ex: id=Lestiviel or type=Necromancer)
	[event]
		name=die
		first_time_only=no
		[filter]
			[filter_adjacent]
				{UNIT}
				side=$unit.side
				count=1-6
			[/filter_adjacent]
		[/filter]
		
		[store_unit]
			[filter]
				{UNIT}
				[filter_adjacent]
					id=$unit.id
				[/filter_adjacent]
			[/filter]
			variable=tmp
			kill=no
		[/store_unit]
		[animate_unit]
			flag=recruiting
			[filter]
				id=$tmp[0].id
			[/filter]
			hits=yes
			[facing]
				id=$unit.id
			[/facing]
		[/animate_unit]
		
		# the kill action is necessary to free the unit position before creating a new one.
		# else, the new unit would be created on an adjacent hex.
		[store_unit]
			[filter]
				id=$unit.id
			[/filter]
			variable=tmp
			kill=yes
			animate=no
		[/store_unit]
		[unit]
			type=$tmp.type
			side=$tmp.side
			x,y=$tmp.x,$tmp.y
		[/unit]
		{CLEAR_VARIABLE tmp}
	[/event]
#enddef

# The special reaction of a character to an attack: tame the 'monster' and 'animals' members, petrify the others
# ID the taming unit type
# RESULT: some additional code
# exemple {LSB_TAMEORPETRIFY "Elvish Shyde" ()}

#define LSB_TAMEORPETRIFY TYPE RESULT
	[event]
		name=attack
		first_time_only=no
		[filter_second]
			type={TYPE}
		[/filter_second]
		[animate_unit]
			flag=tameOrPetrif
			hits=yes
			[filter]
				id=$second_unit.id
			[/filter]
		[/animate_unit]		
		{RESULT}
		[modify_unit]
			[filter]
				id=$unit.id
				[and]
					race=monster
					[or]
						race=animals
					[/or]
				[/and]
			[/filter]
			side=$second_unit.side
		[/modify_unit]
		[petrify]
			[not]
				race=monster
				[or]
					race=animals
				[/or]
			[/not]
			id=$unit.id
		[/petrify]
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		[filter]
			type={TYPE}
		[/filter]
		[filter_attack]
			name=staff
		[/filter_attack]
		[animate_unit]
			flag=tameOrPetrif
			hits=yes
			[filter]
				id=$unit.id
			[/filter]
		[/animate_unit]		
		{RESULT}
		[modify_unit]
			[filter]
				id=$second_unit.id
				[and]
					race=monster
					[or]
						race=animals
					[/or]
				[/and]
			[/filter]
			side=$unit.side
		[/modify_unit]
		[petrify]
			[not]
				race=monster
				[or]
					race=animals
				[/or]
			[/not]
			id=$second_unit.id
		[/petrify]
	[/event]
#enddef

# The special reaction of a character to an attack: tame the attacking unit
# ID the taming unit type
# RESULT: some additional code
# exemple {LSB_TAME "Elvish Shyde" ()}

#define LSB_TAME TYPE RESULT
	[event]
		name=attack
		first_time_only=no
		[filter_second]
			type={TYPE}
		[/filter_second]
		[animate_unit]
			flag=healing
			hits=yes
			[filter]
				id=$second_unit.id
			[/filter]
		[/animate_unit]		
		{RESULT}
		[modify_unit]
			[filter]
				id=$unit.id
			[/filter]
			side=$second_unit.side
		[/modify_unit]
		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			experience="$($second_unit.experience + $unit.level * 8)"
		[/modify_unit]		
	[/event]
	
	[event]
		name=attacker hits
		first_time_only=no
		[filter]
			type={TYPE}
		[/filter]
		[filter_attack]
			name=staff
		[/filter_attack]
		[animate_unit]
			flag=healing
			hits=yes
			[filter]
				id=$unit.id
			[/filter]
		[/animate_unit]		
		{RESULT}
		[modify_unit]
			[filter]
				id=$second_unit.id
			[/filter]
			side=$unit.side
		[/modify_unit]
		[modify_unit]
			[filter]
				id=$unit.id
			[/filter]
			experience="$($unit.experience + $second_unit.level * 8)"
		[/modify_unit]
	[/event]
#enddef

# A magic weapon named NAME transform attackers to some units.
# TYPES is a randomized list of possible units
# example: {LSB_TRANSFWEAPON magicMace "Giant Rat,Spider,Ant"}

#define LSB_TRANSFWEAPON NAME TYPES
	[event]
		name=attacker hits
		first_time_only=no
		[filter_attack]
			name={NAME}
		[/filter_attack]
		[store_unit]
			variable=def
			[filter]
				id=$second_unit.id
			[/filter]
		[/store_unit]
		[fire_event]
			name=LSB_Tr_{NAME}
		[/fire_event]
	[/event]
	[event]
		name=defender hits
		first_time_only=no
		[filter_second_attack]
			name={NAME}
		[/filter_second_attack]
		[store_unit]
			variable=def
			[filter]
				id=$unit.id
			[/filter]
		[/store_unit]
		[fire_event]
			name=LSB_Tr_{NAME}
		[/fire_event]
	[/event]
	
	[event]
		name=LSB_Tr_{NAME}
		first_time_only=no

		[set_variables]
			name=type_table
			[split]
				list={TYPES}
				key=type
				separator=,
			[/split]
		[/set_variables]

		[set_variable]
			name=z
			rand=1..$type_table.length
		[/set_variable]
		{VARIABLE_OP z sub 1}

		[set_variable]
			name=z
			value=$type_table[$z].type
		[/set_variable]
		
		[transform_unit]
			id=$def.id
			transform_to=$z
		[/transform_unit]
		[store_unit]
			variable=def
			[filter]
				id=$def.id
			[/filter]
		[/store_unit]
		[if]
			[variable]
				name=def.hitpoints
				greater_than=$def.max_hitpoints
			[/variable]
			[then]
				[set_variable]
					name=def.hitpoints
					value=$def.max_hitpoints
				[/set_variable]
				[unstore_unit]
					variable=def
				[/unstore_unit]
			[/then]
		[/if]
		{CLEAR_VARIABLE def,z,type_table}
	[/event]
#enddef

#define LSB_ABILITIES_EVENTS
	{LSB_SHOCKWAVE}
	{LSB_PETRIATTACK_EVENT}
#enddef


