#textdomain wesnoth-ReturntoNoelren

#ifdef LSB_COMMENT
Special menus

============= rev History ============
0.0.1 set-up
0.1.0 Part II
0.2.1 review menu system

#define LSB_PURGEMENU MENU
[set_menu_item]
	id=menu_{MENU}
	description="Void"
	[show_if]
		[have_unit]
		[/have_unit]
	[/show_if]
	[filter_location]
	[/filter_location]
#	[command]
#	[/command]	
[/set_menu_item]
#enddef
#endif

#define RTN_DISABLEMENUSHOW MENU
# -- This macro disable the menu item MENU setting a "never" condition
[set_menu_item]
	id=menu_{MENU}
	description="Never show."
	[show_if]
		[have_unit]
			id=RTN_Nobody
		[/have_unit]
	[/show_if]
#	[command]
#	[/command]
[/set_menu_item]
#enddef

# ================ Help system menu, always present ================
#define RTN_MENU_HELP
[set_menu_item]
	id=menu_1
	description={RTN_USTR-150}
	[command]
        [message]
            speaker=narrator
            image="wesnoth-icon.png"
            message= $G_help
        [/message]
	[/command]
[/set_menu_item]
#enddef

# ---------------- Bombs menus ------------------
#define RTN_SET_DROPBOMB_MENU MENU
# This menu allows bombs holders to fire them. Works with another special menu
[set_menu_item]
	id=menu_{MENU}
	description={RTN_USTR-151}
	[show_if]
		[have_unit]
			x,y=$x1,$y1
			[filter_wml]
				[status]
					hasBomb=yes			
				[/status]
			[/filter_wml]
		[/have_unit]
	[/show_if]
	[filter_location]
	[/filter_location]
	[command]
	# $x1 and $y1 will point to the location.
		[item]
			x=$x1
			y=$y1
			image="items/bomb.png"
		[/item]
		# make the bomb except on some terrain ?
		[set_variables]
			name=bombs
			mode=append
			[value]
				x=$x1
				y=$y1
			[/value]
		[/set_variables]
		[store_unit]
			[filter]
				x=$x1
				y=$y1
			[/filter]
			variable=tmp
		[/store_unit]
		[modify_unit]
			[filter]
				x,y=$x1,$y1
			[/filter]
			moves=$tmp.max_moves
			[status]
# this setting clear the status.hasBomb record and don't set it to 'no'
				hasBomb=no
			[/status]
		[/modify_unit]
		{RTN_BOMBEXPLOSION}
		
# --- Hook to collateral effects
		[fire_event]
			name=bombThrowed
		[/fire_event]
	[/command]
[/set_menu_item]
#enddef

#define RTN_SET_GRAPBOMB_MENU BOMBERS MENU
# this menu allows BOMBERS (id list comma separated) to make bombs (only close to a carriage)
# example: {RTN_SET_GRAPBOMB_MENU "Tiomen,Boney"}
[set_menu_item]
	id=menu_{MENU}
	description={RTN_USTR-152}
	[show_if]
		[have_unit]
			id={BOMBERS}
			x,y=$x1,$y1
			[filter_adjacent]
				type=Carriage			
			[/filter_adjacent]
			[filter_wml]
				# filtering on hasBomb=no works not, see earlier note.
				[not]
					[status]
						hasBomb=yes			
					[/status]
				[/not]
			[/filter_wml]
		[/have_unit]
	[/show_if]
	[filter_location]
	[/filter_location]	
	[command]
		{LSB_DIAL_W {RTN_USTR-153}}
		[modify_unit]
			[filter]
				x,y=$x1,$y1
			[/filter]
			moves=0
			[status]
				hasBomb=yes
			[/status]
		[/modify_unit]			
	[/command]
[/set_menu_item]
#enddef

# ---- Fire menus
#define LSB_LIGHTFIRE UNIT INFLAM BURNT MENU
# ---- Menu allowing a unit to set fire to some terrain.
# UNIT = stduf example id=Tiomen,Lestiviel
# INFLAM = terrain able to burn, exemple *^Fdwz
# BURNT = burnt terrain code

# exemple: {LSB_LIGHTFIRE id=Tiomen *^Fdwz Gll}

[set_menu_item]
	id=menu_{MENU}
	description={RTN_USTR-154}
	[show_if]
		[have_unit]
		[/have_unit]
	[/show_if]
	[filter_location]
		[filter_adjacent_location]
			[filter]
				{UNIT}
			[/filter]
		[/filter_adjacent_location]
		terrain={INFLAM}
	[/filter_location]
	[command]
		[store_locations]
			find_in=incendie
			[or]
				x,y=$x1,$y1
			[/or]
			variable=incendie
		[/store_locations]
		[set_variable]
			name=tmp_fire
			add=1
		[/set_variable]
# --- start the fire
		[item]
			x,y=$x1,$y1
			halo=scenery/lit1.png:100,scenery/lit3.png:100,scenery/lit5.png:100,scenery/lit7.png:100
		[/item]
# --- Hook to trigger a custom event when fire starts
		[fire_event]
			name=fireCollat
		[/fire_event]
	[/command]
[/set_menu_item]

{LSB_INCENDIE {INFLAM} {BURNT}}
#enddef

#define LSB_LIGHTFIRE_HERE UNIT BURNT MENU
# ---- same as previous, but the burning terrain is defined by the mouse location.
# UNIT = stduf exemple id=Tiomen,Lestiviel
# BURNT = burnt terrain code.

# exemple: {LSB_LIGHTFIRE_HERE id=Tiomen Gll}

	[set_menu_item]
		id=menu_{MENU}
		description={RTN_USTR-154}
		[show_if]
			[have_unit]
			[/have_unit]
		[/show_if]
		[filter_location]
			[filter_adjacent_location]
				[filter]
					{UNIT}
				[/filter]
			[/filter_adjacent_location]
# --- Can set fire only to forests and flat terrains.
			terrain=*^F*,G*
		[/filter_location]
		[command]
			[store_locations]
				find_in=incendie
				[or]
					x,y=$x1,$y1
				[/or]
				variable=incendie
			[/store_locations]
			[store_locations]
				x,y=$x1,$y1
				variable=loc
			[/store_locations]
			[set_variable]
				name=tmp_fire
				add=1
			[/set_variable]
# --- start the fire
			[item]
				x,y=$x1,$y1
				halo=scenery/lit1.png:100,scenery/lit3.png:100,scenery/lit5.png:100,scenery/lit7.png:100
#				halo=scenery/fire1.png:100,scenery/fire2.png:100,scenery/fire3.png:100,scenery/fire4.png:100,scenery/fire5.png:100,scenery/fire6.png:100,scenery/fire7.png:100,scenery/fire8.png:100
			[/item]
# --- Hook to trigger a custom event when fire starts
			[fire_event]
				name=fireCollat
			[/fire_event]
		[/command]
	[/set_menu_item]
	
	{LSB_INCENDIE $loc.terrain {BURNT}}
	{CLEAR_VARIABLE loc}
#enddef

#define LSB_LIGHTCAMPFIRE UNIT LOC FLAG MENU
# ---- Menu allowing an unit to light a campfire. The unit must stand in a forest.
# UNIT = stduf example id=Tiomen,Lestiviel
# LOC = a variable where to store the fire location
# FLAG = a flag. The menu disables itself when used. Clear the variable FLAG to reenable it.
# Note: the scenario itself is responsible to stop the fire and reenable the special menu. Special action must be taken to use more than one fire simultaneously.
	{CLEAR_VARIABLE {FLAG}}

	[set_menu_item]
		id=menu_{MENU}
		description={RTN_USTR-155}
		[show_if]
			[variable]
				name={FLAG}
				boolean_equals=false
			[/variable]
		[/show_if]
		[filter_location]
			[filter_adjacent_location]
				[filter]
					{UNIT}
				[/filter]
				terrain=*^F*
			[/filter_adjacent_location]
		[/filter_location]
		[command]
# --- setting the campfire
			[item]
				x,y=$x1,$y1
				halo=scenery/fire1.png:100,scenery/fire2.png:100,scenery/fire3.png:100,scenery/fire4.png:100,scenery/fire5.png:100,scenery/fire6.png:100,scenery/fire7.png:100,scenery/fire8.png:100
			[/item]
# --- Hook to trigger a custom event when fire starts. Variable LOC holds the campfire position (in order to stop it)
			[store_locations]
				x,y=$x1,$y1
				variable={LOC}
			[/store_locations]
			# disable this menu
			[set_variable]
				name={FLAG}
				value=true
			[/set_variable]
			[fire_event]
				name=fireCampStart
			[/fire_event]
		[/command]
	[/set_menu_item]
#enddef

#ifdef LSB_COMMENT
	LSB_MENU_DIG
Units defined with UFILTER are able to dig in WALL terrains. Effect is they are replaced by GROUND
#endif

#define LSB_MENU_DIG UFILTER WALL GROUND MENU
[set_menu_item]
	id=menu_{MENU}
	description={RTN_USTR-156}
	[show_if]
		[have_unit]
		[/have_unit]
	[/show_if]
	[filter_location]
		[filter_adjacent_location]
			[filter]
				{UFILTER}
			[/filter]
		[/filter_adjacent_location]
		terrain={WALL}
	[/filter_location]
	[command]
		[terrain]
			x,y=$x1,$y1
			terrain={GROUND}
		[/terrain]
	[/command]
[/set_menu_item]
#enddef

# --- menus 3 & 4
#define LSB_MENU_CREATEUNIT MENU DESCRIPTION COST FILTER UNIT
# Menu local d'évocation d'élémentaux
# ID = identification du menu
# DESCRIPTION = libellé
# COST diminution des hp
# FILTER = définit les unités capables d'utiliser ce menu
# UNIT = l'unité à créer

[event]
	name=select

	first_time_only=no

	[filter]
		{FILTER}
	[/filter]

	[store_unit]
		[filter]
			x,y=$x1,$y1
		[/filter]
		variable=last_selected_unit
	[/store_unit]
[/event]

[set_menu_item]
	id=menu_{MENU}
	description={RTN_USTR-157}+"{DESCRIPTION} ({COST} hp)"
	[show_if]
		[have_unit]
			{FILTER}
			x,y=$x1,$y1
		[/have_unit]
	[/show_if]
	[filter_location]
	[/filter_location]
	[command]
		[store_unit]
			[filter]
				{FILTER}
				x,y=$x1,$y1
			[/filter]
			variable=summoner
		[/store_unit]
#		{DEBUG_MSG "id=$summoner.id"}
		[if]
			[variable]
				name=summoner.length
				greater_than=1
			[/variable]
		[then]
			[set_variable]
				name=summoner
				value=$last_selected_unit
			[/set_variable]
		[/then]
		[/if]
		
		[if]
			[variable]
				name=summoner.hitpoints
				greater_than={COST}
			[/variable]
		[then]
			[unit]
				type={UNIT}
				side=$side_number
				x,y=$x1,$y1
				animate=yes
#				find_vacant=yes
			[/unit]
			[set_variable]
				name=summoner.hitpoints
				sub={COST}
			[/set_variable]
			[set_variable]
				name=summoner.experience
				add=2
			[/set_variable]
			[unstore_unit]
				variable=summoner
			[/unstore_unit]				
		[/then]
		 [else]
			[message]
				speaker=narrator
				side_for=$side_number
				caption={RTN_USTR-158}
				message={RTN_USTR-159}
			[/message]
		 [/else]
		[/if]
		{CLEAR_VARIABLE summoner}
	[/command]
[/set_menu_item]
#enddef

# --- menu 5
#ifdef LSB_COMMENT
	LSB_MENU_CRUSH FILTER
 Pretrified units can be crushed with this special hit
#endif

#define LSB_MENU_CRUSH FILTER MENU
[set_menu_item]
	id=menu_{MENU}
	description={RTN_USTR-160}
	[show_if]
		[have_unit]
			[filter_wml]
				[status]
					petrified=yes
				[/status]
			[/filter_wml]
			x,y=$x1,$y1
		[/have_unit]
	[/show_if]
	[filter_location]
		[filter_adjacent_location]
			[filter]
				{FILTER}
			[/filter]
		[/filter_adjacent_location]
	[/filter_location]
	[command]
		[kill]
			x,y=$x1,$y1
			animate=yes
			fire_event=yes
		[/kill]
	[/command]
[/set_menu_item]
#enddef

# --- menu 6
#define RTN_MENU_CHANGEWORLD MENU
[set_menu_item]
	id=menu_{MENU}
	description={RTN_USTR-161}
	[show_if]
		[have_unit]
		[/have_unit]
	[/show_if]
	[filter_location]
	[/filter_location]
	[command]
		[if]
			[variable]
				name=currentWorld
				equals=5
			[/variable]
		[then]
			[set_variable]
				name=i
				value=1
			[/set_variable]
		[/then]
		[else]
			[set_variable]
				name=i
				value=$currentWorld
			[/set_variable]
			[set_variable]
				name=i
				add=1
			[/set_variable]
		[/else]
		[/if]
		[while]
			[variable]
				name=wcnt[$i].n
				equals=0
			[/variable]
			[do]
				[set_variable]
					name=i
					add=1
				[/set_variable]
				[if]
					[variable]
						name=i
						greater_than=5
					[/variable]
					[then]
						[set_variable]
							name=i
							value=1
						[/set_variable]
					[/then]
				[/if]
			[/do]
		[/while]
		# --- switch to world i
		[set_variable]
			name=fire
			value="world_$i"
		[/set_variable]		
		[fire_event]
			name=$fire
		[/fire_event]
		{CLEAR_VARIABLE i}
		{CLEAR_VARIABLE fire}
	[/command]
[/set_menu_item]
#enddef

#------------- Building boats ---------------
#define LSB_MENU_BUILDBOAT UFILTER MENU
[set_menu_item]
	id=menu_{MENU}
	description={RTN_USTR-162}
	[show_if]
		[have_unit]
		[/have_unit]
	[/show_if]
	[filter_location]
		[filter_adjacent_location]
			[filter]
				{UFILTER}
			[/filter]
		[/filter_adjacent_location]
		[not]
			find_in=boats
		[/not]
		[not]
			find_in=bridges
		[/not]
		terrain=W*
		#{WATER}
	[/filter_location]
	{LSB_BUILDBOAT_CMD {UFILTER} }
[/set_menu_item]

[set_variable]
	name=boats_cnt
	value=0
[/set_variable]
#enddef

#------------- Building bridges ---------------
#define LSB_MENU_BUILDBRIDGE UFILTER MENU
[set_menu_item]
	id=menu_{MENU}
	description={RTN_USTR-164}
	[show_if]
		[have_unit]
		[/have_unit]
	[/show_if]
	[filter_location]
		[filter_adjacent_location]
			[filter]
				{UFILTER}
			[/filter]
		[/filter_adjacent_location]
		[not]
			find_in=boats
		[/not]
		[not]
			find_in=bridges
		[/not]
		terrain=W*
		#{WATER}
	[/filter_location]
	{LSB_STARTBRIDGE_CMD {UFILTER} }
[/set_menu_item]
#enddef

#define LSB_MENU_THROWSPORES MENU UFILTER SIDE
# Menu local pour répandre des psores
# ID = identification du menu
# UFILTER = définit les unités capables d'utiliser ce menu

[set_menu_item]
	id=menu_{MENU}
	description={RTN_USTR-166}
	[show_if]
		[have_unit]
			{UFILTER}
			x,y=$x1,$y1
		[/have_unit]
	[/show_if]
	[filter_location]
	[/filter_location]
	[command]
		{RTN_CREATESPORE {SIDE} $x1 $y1}
		[modify_unit]
			[filter]
				x,y=$x1,$y1
			[/filter]
			moves=$unit.max_moves
		[/modify_unit]
	[/command]
[/set_menu_item]
#enddef

#define LSB_MENU_LEADER_RETREAT MENU SIDE TO_X TO_Y
	[set_menu_item]
		id=menu_{MENU}
		description= _ "Ask this leader to retreat."
		[show_if]
			[have_unit]
				side={SIDE}
				x,y=$x1,$y1
				canrecruit=yes
			[/have_unit]
		[/show_if]
		[filter_location]
		[/filter_location]
		[command]
			{CLEAR_AI_ALWAYS_ASPECT_LEADER_GOAL {SIDE} }
			{MODIFY_AI_ADD_ASPECT {SIDE} leader_goal {AI_ASPECT_LEADER_GOAL_RISKY_MOVE_TO {TO_X} {TO_Y}} }
		[/command]
	[/set_menu_item]
#enddef

#define LSB_MENU_DROPITEMS MENU
	[set_menu_item]
		id=menu_{MENU}
		description="Drop items."
		  [show_if]
			[variable]
				name=unit.side
				equals=1
			[/variable]
		  [/show_if]
		[filter_location]
		[/filter_location]
		[command]
			{LSB_LIST_UNIT_THINGS}
		[/command]
	[/set_menu_item]
#enddef

#define LSB_MENU_SHOPMENU MENU MENUTITLE SHOPTYPE
	[set_menu_item]
		id=menu_{MENU}
		description={MENUTITLE}
		[show_if]
			[have_unit]
				x,y=$x1,$y1
				side=$side_number
				[filter_adjacent]
					type={SHOPTYPE}
				[/filter_adjacent]
			[/have_unit]
		[/show_if]
		[filter_location]
		[/filter_location]
		[command]
			[set_variable]
				name=niveau
				value="$($unit.level + 1)"
			[/set_variable]
			{LSB_MAKE_LEVELSHOPMENU $niveau}
		[/command]
	[/set_menu_item]				
#enddef